<krpano>
	<style name="hs_001" url="hs_001.png" icourl="hs_001.png" isdynamic="false" crop="" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>

	<style name="hs_001_s" url="hs_001_s.png" icourl="hs_001_ico_s.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>

	<style name="hs_002" url="hs_002.png" icourl="hs_002_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_003" url="hs_003.png" icourl="hs_003_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_004" url="hs_004.png" icourl="hs_004_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_005" url="hs_005.png" icourl="hs_005_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_006" url="hs_006.png" icourl="hs_006_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_007" url="hs_007.png" icourl="hs_007_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_008" url="hs_008.png" icourl="hs_008_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_009" url="hs_009.png" icourl="hs_009_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_010" url="hs_010.png" icourl="hs_010_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_011" url="hs_011.png" icourl="hs_011_ico.png" isdynamic="true" onloaded="thedoor_onloaded(10);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_012" url="hs_012.png" icourl="hs_012_ico.png" isdynamic="true" onloaded="thedoor_onloaded(25);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_013" url="hs_013.png" icourl="hs_013_ico.png" isdynamic="true" onloaded="thedoor_onloaded(10);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_014" url="hs_014.png" icourl="hs_014_ico.png" isdynamic="true" onloaded="thedoor_onloaded(10);" scale.mobile="0.5" scale.normal="0.3"/>
	<style name="hs_015" url="hs_015.png" icourl="hs_015_ico.png" isdynamic="true" onloaded="thedoor_onloaded(10);" scale.mobile="0.5" scale.normal="0.3"/>



	<style name="link_001" url="link_ico_30.png" edge="center" onclick="dm_openurl(get(link_url));"/>
	<!--

	-->
	<style name="goods_001" url="goods_ico_30.png" edge="center"
		onloaded="
			delayedcall(0.2, set(rotate,0); );
			delayedcall(0.5, set(rotate,0); );
			delayedcall(1.0, set(rotate,0); );
		"
		onloaded.mobile="
			delayedcall(0.2, set(rotate,0); );
			delayedcall(0.5, set(rotate,0); );
			delayedcall(1.0, set(rotate,0); );
		"/>
	

	<style name="replace_001" url="replace_ico.png" edge="bottom" scale.mobile="0.5" scale.normal="0.3" 
		/>
	
	<action name="dm_openurl" type="Javascript"><![CDATA[
		var url = decodeURIComponent(args[1]);
		var count = url.indexOf("http",3);
		if(count != -1){
			url = url.substring(count);
		}
		krpano.call("openurl(" + url + ");");

	]]></action>


	<action name="thedoor_onloaded">
		delayedcall(0.2, set(rotate,0); );
		delayedcall(0.5, set(rotate,0); );
		delayedcall(1.0, set(rotate,0); );
		if("room",
			if(isdynamic,
				do_crop_animation(128,128, %1);
				,
			);
			if(device.mobile,
				,
			);
			load_scene();
			,
			removehotspot(get(name));
		);
	</action>
	<!--动画-->
	<action name="do_crop_animation">
		registerattribute(xframes, calc((imagewidth / %1) BOR 0));
		registerattribute(yframes, calc((imageheight / %2) BOR 0));
		registerattribute(frames, calc(xframes * yframes));
		registerattribute(frame, 0);

		set(crop, '0|0|%1|%2');

		setinterval(calc('crop_anim_' + name), calc(1.0 / %3),
			if(isdynamic,
				inc(frame);
				if(frame GE frames, if(onlastframe !== null, onlastframe() ); set(frame,0); );
				mod(xpos, frame, xframes);
				div(ypos, frame, xframes);
				Math.floor(ypos);
				mul(xpos, %1);
				mul(ypos, %2);
				calc(crop, xpos + '|' + ypos + '|%1|%2');
			  ,
				clearinterval(calc('crop_anim_' + name));
			  );
		  );
	</action>
	<!--创建文字
	%1 txt
	%2 edge
	%3 ox
	%4 oy
	-->
	<action name="add_hotspot_text">
		<!--增加文字-->
		txtadd(hotspot_text,'hotspot_text_',get(name));
		if(hotspot[get(hotspot_text)],,
			addhotspot(get(hotspot_text));

			set(hotspot[get(hotspot_text)].visible,false);
			set(hotspot[get(hotspot_text)].alpha,0);


			set(hotspot[get(hotspot_text)].autoalpha,true);
			set(hotspot[get(hotspot_text)].type,text);
			set(hotspot[get(hotspot_text)].ath,get(ath));
			set(hotspot[get(hotspot_text)].atv,get(atv));

			set(hotspot[get(hotspot_text)].ox,%3);
			set(hotspot[get(hotspot_text)].oy,%4);
			set(hotspot[get(hotspot_text)].wordwrap,flase);
			<!---->
			set(hotspot[get(hotspot_text)].onautosized,
				delayedcall(0,
					tween(alpha,1);
				);

			);

			set(hotspot[get(hotspot_text)].css,'text-align:center; color:#ffffff; font-family:微软雅黑;font-size:14px;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp:1;overflow: hidden;');
			set(hotspot[get(hotspot_text)].bgcolor,0x000000);
			set(hotspot[get(hotspot_text)].padding,5 10 5 10 );
			set(hotspot[get(hotspot_text)].bgalpha,0.5);
			set(hotspot[get(hotspot_text)].bgroundedge,5);

			set(hotspot[get(hotspot_text)].html,%1);
			set(hotspot[get(hotspot_text)].edge,%2);
			txtadd(hotspot[get(hotspot_text)].onclick,'callwith(hotspot[',get(name),'], onclick);');

			set(hotspot[get(hotspot_text)].onloaded,
				delayedcall(0.2, set(rotate,0); );
				delayedcall(0.5, set(rotate,0);set(visible,true); );
				delayedcall(1, set(rotate,0);set(visible,true); );

			);


		);

	</action>

	<!--切换场景-->
	<action name="load_scene">
		if(edit,
			txtadd(onclick,'plugin[dm_ajax].goto_call(all,all,looktohotspot(',get(name),');loadscene(',get(nextscene),', null, MERGE, BLEND(0.1)););');
			,
			txtadd(onclick,'looktohotspot(',get(name),');loadscene(',get(nextscene),', null, MERGE, BLEND(0.1));');
		);
		
	</action>


	<!--拖动-->
	<action name="draghotspot">
		txtadd(hotspot_text,'hotspot_text_',get(name));
		spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery, 'l');
		sub(drag_adjustx, mouse.stagex, hotspotcenterx);
		sub(drag_adjusty, mouse.stagey, hotspotcentery);
		asyncloop(pressed,
			sub(dx, mouse.stagex, drag_adjustx);
			sub(dy, mouse.stagey, drag_adjusty);
			screentosphere(dx, dy, ath, atv);
			screentosphere(dx, dy, hotspot[get(hotspot_text)].ath, hotspot[get(hotspot_text)].atv);
		  );
	</action>

	<!--拖动框-->
	<action name="choice_hotspot">
		asyncloop(true,
			spheretoscreen(
				hotspot[get(plugin[choice_hotspot].parents)].ath,
				hotspot[get(plugin[choice_hotspot].parents)].atv,
				plugin[choice_hotspot].x,
				plugin[choice_hotspot].y
			);
			add(plugin[choice_hotspot].x,2);
			add(plugin[choice_hotspot].y,2);
		);
		
	</action>


</krpano>